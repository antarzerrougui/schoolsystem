// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Students.Data;

namespace Students.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201022090954_Student properties adjusted")]
    partial class Studentpropertiesadjusted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Students.Models.Classe", b =>
                {
                    b.Property<int>("ClasseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClasseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClasseNumber")
                        .HasColumnType("int");

                    b.HasKey("ClasseId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Students.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Absence")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BrothersInSchool")
                        .HasColumnType("int");

                    b.Property<int>("BrothersNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ClasseId")
                        .HasColumnType("int");

                    b.Property<string>("FamilyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOrphan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentLasttName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentPhone")
                        .HasColumnType("int");

                    b.Property<string>("ParentProfession")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClasseId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Students.Models.Student", b =>
                {
                    b.HasOne("Students.Models.Classe", null)
                        .WithMany("ClasseStudents")
                        .HasForeignKey("ClasseId");
                });
#pragma warning restore 612, 618
        }
    }
}
